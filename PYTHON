# Required libraries for speech, time, and system operations
import speech_recognition as sr
import pyttsx3
import os
import datetime
import subprocess
import sys
import pywhatkit

# Initialize the text-to-speech engine
engine = pyttsx3.init()

# Set female voice (can change index for male voice if needed)
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[1].id)

# Initialize speech recognizer
recognizer = sr.Recognizer()


# Function: Convert text to speech
def speak(text):
    engine.say(text)
    engine.runAndWait()


# Function: Open various applications or perform YouTube search
def open_software(software_name):
    if 'chrome' in software_name:
        speak('Opening Chrome...')
        program = r"C:\Program Files\Google\Chrome\Application\chrome.exe"
        subprocess.Popen([program])

    elif 'microsoft edge' in software_name:
        speak('Opening Microsoft Edge...')
        program = r"C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
        subprocess.Popen([program])

    elif 'play' in software_name:
        speak('Opening YouTube...')
        pywhatkit.playonyt(software_name)

    elif 'notepad' in software_name:
        speak('Opening Notepad...')
        subprocess.Popen(['notepad.exe'])

    elif 'calculator' in software_name:
        speak('Opening Calculator...')
        subprocess.Popen(['calc.exe'])

    else:
        speak(f"I couldn't find the software named {software_name}")


# Function: Close running software using taskkill
def close_software(software_name):
    if 'chrome' in software_name:
        speak('Closing Chrome...')
        os.system("taskkill /f /im chrome.exe")

    elif 'microsoft edge' in software_name:
        speak('Closing Microsoft Edge...')
        os.system("taskkill /f /im msedge.exe")

    elif 'notepad' in software_name:
        speak('Closing Notepad...')
        os.system("taskkill /f /im notepad.exe")

    elif 'calculator' in software_name:
        speak('Closing Calculator...')
        os.system("taskkill /f /im calculator.exe")

    else:
        speak(f"I couldn't find any open software named {software_name}")


# Function: Listen for wake word ("hey jarvis") continuously
def listen_for_wake_word():
    with sr.Microphone() as source:
        print('Listening for wake word: "Hey Jarvis"...')
        while True:
            # Adjust for background noise
            recognizer.adjust_for_ambient_noise(source, duration=0.5)
            try:
                # Listen to microphone input
                recorded_audio = recognizer.listen(source, timeout=5)
                # Convert speech to text
                text = recognizer.recognize_google(recorded_audio, language='en-US').lower()
                print("Detected:", text)
                # Wake word detected
                if 'hey jarvis' in text:
                    print('Wake word detected!')
                    speak('Hi Sir, how can I help you?')
                    return True
            except sr.WaitTimeoutError:
                pass
            except Exception as ex:
                print("Could not understand. Waiting...")


# Function: Handle user commands after wake word is detected
def cmd():
    with sr.Microphone() as source:
        # Adjust for ambient noise
        print('Listening for your command...')
        recognizer.adjust_for_ambient_noise(source, duration=0.5)
        recorded_audio = recognizer.listen(source)

    try:
        # Recognize spoken command
        text = recognizer.recognize_google(recorded_audio, language='en-US').lower()
        print('You said:', text)
    except Exception as ex:
        print("Error recognizing command:", ex)
        return False  # Do not break the loop

    # Match commands
    if 'stop' in text:
        speak('Stopping the program. Goodbye!')
        sys.exit()

    elif 'open' in text:
        software_name = text.replace('open', '').strip()
        open_software(software_name)

    elif 'close' in text:
        software_name = text.replace('close', '').strip()
        close_software(software_name)

    elif 'time' in text:
        current_time = datetime.datetime.now().strftime('%I:%M %p')
        speak(f"The current time is {current_time}")
        print(current_time)

    elif 'who is god' in text:
        speak('Ajitheyyy Kadavuleyy')

    elif 'what is your name' in text:
        speak('My name is Jarvis, your Artificial Intelligence Assistant')

    else:
        speak("Sorry, I didn't understand that.")

    return False


# Main Loop: Continuously listen and process commands
while True:
    if listen_for_wake_word():
        while True:
            if cmd():
                break  # break only if 'stop' or serious error occurs
